import React from "react";
import { DataGrid } from "@mui/x-data-grid";
import { Box, Button, Divider, Stack } from "@mui/material";
import ImportExportIcon from "@mui/icons-material/ImportExport";
import { Card } from "@mui/material";
import { Cookies } from "react-cookie";
import MUISnackbar from "../../common/snackbar/Snackbar";
import assetService from "../../../services/asset/asset.service";
import { useParams } from "react-router-dom";

const VulnerabilityDetails = () => {
  const [open, setOpen] = React.useState(false);
  const [alertMsg, setAlertMsg] = React.useState(null);
  const [severity, setSeverity] = React.useState(null);
  const [xposition, setXposition] = React.useState("right");
  const [yposition, setYposition] = React.useState("bottom");
  const [loading, setLoading] = React.useState(false);
  const [vunerabilityDetails, setVunerabilityDetails] = React.useState([]);

  const { id } = useParams();
  //userId
  const cookiesData = new Cookies();
  const userData = cookiesData.get("UserObj");
  const userId = userData?._id;

  const handleCloseSnackbar = () => {
    setOpen(false);
  };

  // const handlePageChange = (pagenumber) => {
  //   setPageNumber(pagenumber);
  //   // getAssetDetails(pagenumber, pageSize);
  // };

  // const handlePageSizeChange = (pagesize) => {
  //   setPageSize(pagesize);
  //   // getAssetDetails(pageNumber, pagesize);
  // };

  const getVulnerabilityByAssetId = async () => {
    try {
      const response = await assetService.getVulnerabilityByUserAndAssetId(id);
      if (response.data?.data?.vulnerability_summary)
        setVunerabilityDetails(response.data?.data?.vulnerability_summary);
      setLoading(false);
    } catch (error) {
      setAlertMsg("Something went wrong Please try Again Later");
      setSeverity("error");
      setXposition("center");
      setYposition("top");
      setOpen(true);
      console.log(`Error occured getAllEventsById ${error}`);
    }
  };

  const columns = [
    {
      field: "Title",
      headerName: "Title",
      width: 600,
      disableClickEventBubbling: true,
      disableColumnMenu: true,
      sortable: false,
    },
    {
      field: "Asset_IP",
      headerName: "Asset IP",
      width: 220,
      disableClickEventBubbling: true,
      disableColumnMenu: true,
      sortable: false,
    },
    {
      field: "Asset_MAC",
      headerName: "Asset MAC",
      width: 320,
      disableClickEventBubbling: true,
      disableColumnMenu: true,
      sortable: false,
    },
    {
      field: "Advisory_No",
      headerName: "Advisory_No",
      width: 320,
      renderCell: (params) => (
        <a
          href={`https://www.cisa.gov/news-events/ics-advisories/${params.row.Advisory_No}`}
          target="_blank"
        >
          {params.row.Advisory_No}
        </a>
      ),
      disableClickEventBubbling: true,
      disableColumnMenu: true,
      sortable: false,
    },
  ];

  React.useEffect(() => {
    getVulnerabilityByAssetId();
  }, []);

  return (
    <div>
      <MUISnackbar
        open={open}
        handleClose={handleCloseSnackbar}
        alertMsg={alertMsg}
        severity={severity}
        xposition={xposition}
        yposition={yposition}
      />
      <Card className="center" style={{ padding: 15 }}>
        <Box style={{ display: "flex", justifyContent: "right" }}>
          <Stack>
            <Button
              variant="contained"
              color="primary"
              endIcon={<ImportExportIcon />}
            >
              Export
            </Button>
          </Stack>
        </Box>

        <br />
        <Box
          className="Datagrid-box"
          sx={{
            height: 500,
            width: "100%",
          }}
        >
          <DataGrid
            getRowId={(r) => r.Vulnerability_ID}
            rows={vunerabilityDetails}
            columns={columns}
            loading={loading}
            paginationMode="server"
            getRowClassName={(params) =>
              params.indexRelativeToCurrentPage % 2 === 0 ? "even" : "odd"
            }
          />
          <br />
          <br />
          <br />
        </Box>
      </Card>
    </div>
  );
};

export default VulnerabilityDetails;
